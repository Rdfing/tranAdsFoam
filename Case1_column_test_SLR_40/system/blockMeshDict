/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 0.001;	//This is an scaling operation. Done at the end.

xmin  0;
xmax  43.4;
ymin  0;
ymax  1;
zmin  0;
zmax  1;

//xcells 20;
//ycells 20;
//zcells 1;

deltax 0.1;	//0.5 - 0.2 - 0.05


deltay #calc "$deltax";	//0.5 - 0.2 - 0.05
deltaz 1;	//0.05

lx #calc "$xmax - $xmin";
ly #calc "$ymax - $ymin";
lz #calc "$zmax - $zmin";

xcells #calc "round($lx/$deltax)";
ycells #calc "round($ly/$deltay)";
zcells #calc "round($lz/$deltaz)";

vertices
(
//BLOCK1
    ($xmin  $ymin  $zmin)	//0
    ($xmax  $ymin  $zmin)	//1
    ($xmax  $ymax  $zmin)	//2
    ($xmin  $ymax  $zmin)	//3
    ($xmin  $ymin  $zmax)	//4
    ($xmax  $ymin  $zmax)	//5
    ($xmax  $ymax  $zmax)	//6
    ($xmin  $ymax  $zmax)	//7

/*
    (0 0 0)
    (1 0 0)
    (1 1 0)
    (0 1 0)
    (0 0 0.1)
    (1 0 0.1)
    (1 1 0.1)
    (0 1 0.1)
*/
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (400 1 1) simpleGrading (1 1 1)


    // hex (0 1 2 3 4 5 6 7) ($xcells $ycells $zcells) 
    // simpleGrading 
    // (
	// (
	//     (0.3 0.2 0.125)
	//     (0.2 0.4 1)
	//     (0.5 0.4 6)
	// )
	// (
	//     (0.4 0.25 0.125)
	//     (0.2 0.5 1)
	//     (0.4 0.25 8) 
	// )
	// 1
    // )

);

edges
(

);

boundary
(
    //Define this patch empty at the begining so the overset patch is the first one in the file boundary

    // oversetPatch
    // {
    //     type overset;
    //     faces ();
    // }


    inlet
    //minX
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    outlet
    //maxX
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }
    bottom
    //minY
    {
        type empty;
        faces
        (
            (0 1 5 4)
        );
    }
    top
    //maxY
    {
        type empty;
        faces
        (
            (3 7 6 2)
        );
    }
    back
    //minZ
    {
        type empty;
        faces
        (
            (0 3 2 1)
        );
    }
    front
    //maxZ
    {
        type empty;
        faces
        (
            (4 5 6 7)
        );
    }
);

mergePatchPairs
(

);

// ************************************************************************* //
